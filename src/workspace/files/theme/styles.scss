@use 'sass:map';
@use '~@angular/material' as mat;
@use './palette.scss';

@import './glow.scss';
@import './snacker.scss';

@mixin style-theme($theme, $palette) {
  $config: mat.get-color-config($theme);

  $b: map.get($config, background);
  $f: map.get($config, foreground);

  $background: mat.get-color-from-palette($b, background);
  $card: mat.get-color-from-palette($b, card);
  $app-bar: mat.get-color-from-palette($b, app-bar);
  $status-bar: mat.get-color-from-palette($b, status-bar);
  $hover: mat.get-color-from-palette($b, hover);
  $tooltip: mat.get-color-from-palette($b, tooltip);

  $base: mat.get-color-from-palette($f, base);
  $text: mat.get-color-from-palette($f, text);
  $icon: mat.get-color-from-palette($f, icon);
  $hint: mat.get-color-from-palette($f, hint);
  $divider: mat.get-color-from-palette($f, divider);

  .background-default,
  .background-card {
    background-color: $card!important;
  }

  .background-app-bar {
    background-color: $app-bar!important;
  }

  .background-stacked {
    background-color: $background!important;
  }

  .background-inverted {
    background-color: $text!important;
    color: $background!important;
  }

  .card-outline {
    border: 1px solid $text!important;
  }

  .card-outline-divider {
    border: 1px solid $divider!important;
  }

  .color-text {
    color: $text!important;
  }

  a.mat-tab-item,
  a.mat-tab-link,
  a.mat-list-item:visited,
  a.mat-tab-link:visited {
    color: $text;
  }

  mat-paginator.mat-paginator {
    background-color: $background;
  }

  a,
  a.mat-list-item.active,
  a.mat-tab-link.active {
    color: palette.get-theme-color($palette, "primary");
  }

  a:visited {
    color: palette.get-theme-color($palette, "warn");
  }

  @each $key, $value in $palette {
    .background-#{$key} {
      background-color: map.get($value, "color")!important;
      color: map.get($value, "contrast")!important;
    }

    .card-outline-#{$key} {
      border: 1px solid;
      border-color: map.get($value, "color")!important;
    }

    .color-#{$key},
    code.#{$key} {
      color: map.get($value, "color")!important;
    }

    mat-divider.mat-divider.#{$key} {
      border-color: map.get($value, "color");
    }
  }

  @include style-glow($palette);
  @include style-snacker($palette);
}
