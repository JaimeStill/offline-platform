@use 'sass:map';
@use '~@angular/material' as mat;

@function get-palette($light: true) {
  $palette: (
    "red": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$red-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$red-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$red-palette, if($light, 500, A200))
    ),
    "pastel-red": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$red-palette, 100),
      "color": mat.get-color-from-palette(mat.$red-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$red-palette, 100)
    ),
    "pink": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$pink-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$pink-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$pink-palette, if($light, 500, A200))
    ),
    "pastel-pink": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$pink-palette, 100),
      "color": mat.get-color-from-palette(mat.$pink-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$pink-palette, 100)
    ),
    "purple": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$purple-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$purple-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$purple-palette, if($light, 500, A200))
    ),
    "pastel-purple": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$purple-palette, 100),
      "color": mat.get-color-from-palette(mat.$purple-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$purple-palette, 100)
    ),
    "deep-purple": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$deep-purple-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$deep-purple-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$deep-purple-palette, if($light, 500, A200))
    ),
    "pastel-deep-purple": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$deep-purple-palette, 100),
      "color": mat.get-color-from-palette(mat.$deep-purple-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$deep-purple-palette, 100)
    ),
    "indigo": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$indigo-palette, if($light, A700, A200)),
      "color": mat.get-color-from-palette(mat.$indigo-palette, if($light, A700, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$indigo-palette, if($light, A700, A200))
    ),
    "pastel-indigo": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$indigo-palette, 100),
      "color": mat.get-color-from-palette(mat.$indigo-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$indigo-palette, 100)
    ),
    "blue": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$blue-palette, if($light, 500, 300)),
      "color": mat.get-color-from-palette(mat.$blue-palette, if($light, 500, 300)),
      "contrast": mat.get-contrast-color-from-palette(mat.$blue-palette, if($light, 500, 300))
    ),
    "pastel-blue": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$blue-palette, 100),
      "color": mat.get-color-from-palette(mat.$blue-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$blue-palette, 100)
    ),
    "light-blue": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$light-blue-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$light-blue-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$light-blue-palette, if($light, 500, A200))
    ),
    "pastel-light-blue": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$light-blue-palette, 100),
      "color": mat.get-color-from-palette(mat.$light-blue-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$light-blue-palette, 100)
    ),
    "cyan": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$cyan-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$cyan-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$cyan-palette, if($light, 500, A200))
    ),
    "pastel-cyan": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$cyan-palette, A200),
      "color": mat.get-color-from-palette(mat.$cyan-palette, A200),
      "contrast": mat.get-contrast-color-from-palette(mat.$cyan-palette, A200)
    ),
    "teal": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$teal-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$teal-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$teal-palette, if($light, 500, A200))
    ),
    "pastel-teal": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$teal-palette, A200),
      "color": mat.get-color-from-palette(mat.$teal-palette, A200),
      "contrast": mat.get-contrast-color-from-palette(mat.$teal-palette, A200)
    ),
    "green": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$green-palette, A700),
      "color": mat.get-color-from-palette(mat.$green-palette, A700),
      "contrast": mat.get-contrast-color-from-palette(mat.$green-palette, A700)
    ),
    "pastel-green": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$green-palette, A200),
      "color": mat.get-color-from-palette(mat.$green-palette, A200),
      "contrast": mat.get-contrast-color-from-palette(mat.$green-palette, A200)
    ),
    "light-green": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$light-green-palette, if($light, A700, A400)),
      "color": mat.get-color-from-palette(mat.$light-green-palette, if($light, A700, A400)),
      "contrast": mat.get-contrast-color-from-palette(mat.$light-green-palette, if($light, A700, A400))
    ),
    "pastel-light-green": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$light-green-palette, A200),
      "color": mat.get-color-from-palette(mat.$light-green-palette, A200),
      "contrast": mat.get-contrast-color-from-palette(mat.$light-green-palette, A200)
    ),
    "lime": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$lime-palette, if($light, 700, A200)),
      "color": mat.get-color-from-palette(mat.$lime-palette, if($light, 700, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$lime-palette, if($light, 700, A200))
    ),
    "pastel-lime": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$lime-palette, A200),
      "color": mat.get-color-from-palette(mat.$lime-palette, A200),
      "contrast": mat.get-contrast-color-from-palette(mat.$lime-palette, A200)
    ),
    "yellow": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$yellow-palette, if($light, 500, A400)),
      "color": mat.get-color-from-palette(mat.$yellow-palette, if($light, 500, A400)),
      "contrast": mat.get-contrast-color-from-palette(mat.$yellow-palette, if($light, 500, A400))
    ),
    "pastel-yellow": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$yellow-palette, 100),
      "color": mat.get-color-from-palette(mat.$yellow-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$yellow-palette, 100)
    ),
    "amber": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$amber-palette, if($light, 500, A400)),
      "color": mat.get-color-from-palette(mat.$amber-palette, if($light, 500, A400)),
      "contrast": mat.get-contrast-color-from-palette(mat.$amber-palette, if($light, 500, A400))
    ),
    "pastel-amber": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$amber-palette, 100),
      "color": mat.get-color-from-palette(mat.$amber-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$amber-palette, 100)
    ),
    "orange": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$orange-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$orange-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$orange-palette, if($light, 500, A200))
    ),
    "pastel-orange": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$orange-palette, 100),
      "color": mat.get-color-from-palette(mat.$orange-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$orange-palette, 100)
    ),
    "deep-orange": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$deep-orange-palette, if($light, 500, A200)),
      "color": mat.get-color-from-palette(mat.$deep-orange-palette, if($light, 500, A200)),
      "contrast": mat.get-contrast-color-from-palette(mat.$deep-orange-palette, if($light, 500, A200))
    ),
    "pastel-deep-orange": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$deep-orange-palette, 100),
      "color": mat.get-color-from-palette(mat.$deep-orange-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$deep-orange-palette, 100)
    ),
    "brown": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$brown-palette, if($light, 500, 300)),
      "color": mat.get-color-from-palette(mat.$brown-palette, if($light, 500, 300)),
      "contrast": mat.get-contrast-color-from-palette(mat.$brown-palette, if($light, 500, 300))
    ),
    "pastel-brown": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$brown-palette, 100),
      "color": mat.get-color-from-palette(mat.$brown-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$brown-palette, 100)
    ),
    "gray": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$gray-palette, if($light, 700, 300)),
      "color": mat.get-color-from-palette(mat.$gray-palette, if($light, 700, 300)),
      "contrast": mat.get-contrast-color-from-palette(mat.$gray-palette, if($light, 700, 300))
    ),
    "pastel-gray": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$gray-palette, 100),
      "color": mat.get-color-from-palette(mat.$gray-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$gray-palette, 100)
    ),
    "blue-gray": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$blue-gray-palette, if($light, 700, 300)),
      "color": mat.get-color-from-palette(mat.$blue-gray-palette, if($light, 700, 300)),
      "contrast": mat.get-contrast-color-from-palette(mat.$blue-gray-palette, if($light, 700, 300))
    ),
    "pastel-blue-gray": (
      "theme": if($light, 'light', 'dark'),
      "palette": mat.define-palette(mat.$blue-gray-palette, 100),
      "color": mat.get-color-from-palette(mat.$blue-gray-palette, 100),
      "contrast": mat.get-contrast-color-from-palette(mat.$blue-gray-palette, 100)
    )
  );

  $palette: map.set($palette, "primary", map.get($palette, "blue"));
  $palette: map.set($palette, "accent", map.get($palette, "blue-gray"));
  $palette: map.set($palette, "warn", map.get($palette, "red"));

  @return $palette;
}

@function get-theme($palette) {
  @return (
    color: (
      "primary": get-theme-palette($palette, "primary"),
      "accent": get-theme-palette($palette, "accent"),
      "warn": get-theme-palette($palette, "warn")
    )
  );
}

@function get-theme-palette($palette, $color) {
  @return map.get(map.get($palette, $color), "palette");
}

@function get-theme-color($palette, $color) {
  @return map.get(map.get($palette, $color), "color");
}

@function get-theme-contrast($palette, $color) {
  @return map.get(map.get($palette, $color), "contrast");
}
